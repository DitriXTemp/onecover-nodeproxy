#Использовать xml-parser

Перем ПутьКФайлуКонфигурации;
Перем ДанныеОбъектов;
Перем ТипыМодулей;

Процедура ПриСозданииОбъекта(ПутьКИсходникам) Экспорт 

	ТипыМодулей = Новый Соответствие;
	ИнициализацияТипыМодулей();
	ДанныеОбъектов = Новый Соответствие;
	ПроцессорXML = Новый СериализацияДанныхXML();
	
	ПутьКФайлуКонфигурации = ПутьКИсходникам + ПолучитьРазделительПути() + "ConfigDumpInfo.xml"; 

	Файл = Новый Файл(ПутьКФайлуКонфигурации);

	Если НЕ Файл.Существует() Тогда
		Сообщить ("Корень конфигурации не обнаружен"); 
		Возврат;
	КонецЕсли;	

	РезультатЧтения = ПроцессорXML.ПрочитатьИзФайла(ПутьКФайлуКонфигурации);
	ДанныеXML = РезультатЧтения.Получить("ConfigDumpInfo")["_Элементы"]["ConfigVersions"];

	Для Каждого ДанныеКлюч Из ДанныеXML Цикл

		ОбъектКонфигурации = ДанныеКлюч["Metadata"]["_Атрибуты"];
		ДанныеОбъектов.Вставить(ОбъектКонфигурации.Получить("id"), ОбъектКонфигурации.Получить("name"));

	КонецЦикла;

КонецПроцедуры	

Функция ОпределитьМодульПоId(IdОбъекта, idМодуля = "") Экспорт

	ИмяМодуля = ДанныеОбъектов.Получить(IdОбъекта);

	Если НЕ ЗначениеЗаполнено(ИмяМодуля) Тогда
		ИмяМодуля = IdОбъекта;
	КонецЕсли;	

	Модуль = ИмяМодуля + "." + ТипМодуля(idМодуля);

	Возврат Модуль;

КонецФункции	

Функция ТипМодуля(idТипа)

	ТипМодуля = ТипыМодулей.Получить(idТипа);
	Если ТипМодуля = Неопределено Тогда
		ТипМодуля = idТипа;
	КонецЕсли;	

	Возврат ТипМодуля;

КонецФункции	

Процедура ИнициализацияТипыМодулей()
	ТипыМодулей = ПутиФайловКонфигурации.ТипыМодулей();
КонецПроцедуры	