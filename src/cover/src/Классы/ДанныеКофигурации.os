#Использовать xml-parser

Перем ПутьКФайлуКонфигурации;
Перем ДанныеОбъектов;
Перем ТипыМодулей;

Процедура ПриСозданииОбъекта(ПутьКИсходникам) Экспорт 

	ТипыМодулей = Новый Соответствие;
	ИнициализацияТипыМодулей();
	ДанныеОбъектов = Новый Соответствие;
	ПроцессорXML = Новый СериализацияДанныхXML();
	
	ПутьКФайлуКонфигурации = ПутьКИсходникам + ПолучитьРазделительПути() + "ConfigDumpInfo.xml"; 

	Файл = Новый Файл(ПутьКФайлуКонфигурации);

	Если НЕ Файл.Существует() Тогда
		Сообщить ("Корень конфигурации не обнаружен"); 
		Возврат;
	КонецЕсли;	

	РезультатЧтения = ПроцессорXML.ПрочитатьИзФайла(ПутьКФайлуКонфигурации);
	ДанныеXML = РезультатЧтения.Получить("ConfigDumpInfo")["_Элементы"]["ConfigVersions"];

	Для Каждого ДанныеКлюч Из ДанныеXML Цикл

		ОбъектКонфигурации = ДанныеКлюч["Metadata"]["_Атрибуты"];
		id = ОбъектКонфигурации.Получить("id");
		id = СтрРазделить(id, ".", Ложь)[0];
		Если ДанныеОбъектов.Получить(id) = Неопределено Тогда
			ДанныеОбъектов.Вставить(id, ОбъектКонфигурации.Получить("name"));
		конецЕсли;

	КонецЦикла;

КонецПроцедуры	

Функция ОпределитьМодульПоId(IdОбъекта, idМодуля = "", extID = -1) Экспорт
	// Если ТипМодуля(idМодуля) = "CommandModule" Тогда
	// 	ИмяМодуля = ДанныеОбъектов.Получить(IdОбъекта + ?(extID = -1, "", "." + Строка(extID - 1)));
	// Иначе
	IdОбъектаБезТочки = СтрРазделить(IdОбъекта, ".", Ложь)[0];
	ИмяМодуля = ДанныеОбъектов.Получить(IdОбъектаБезТочки);
	// КонецЕсли;
	
	// Сообщить(IdОбъекта + ": " + ИмяМодуля);

	Если НЕ ЗначениеЗаполнено(ИмяМодуля) Тогда
		ИмяМодуля = IdОбъекта;
	ИначеЕсли ТипМодуля(idМодуля) = "CommandModule" Тогда
	 	Возврат ИмяМодуля;
	КонецЕсли;	

	Модуль = ИмяМодуля + "." + ТипМодуля(idМодуля);

	Возврат Модуль;

КонецФункции	

Функция ТипМодуля(idТипа)

	ТипМодуля = ТипыМодулей.Получить(idТипа);
	Если ТипМодуля = Неопределено Тогда
		ТипМодуля = idТипа;
	КонецЕсли;	

	Возврат ТипМодуля;

КонецФункции	

Процедура ИнициализацияТипыМодулей()
	ТипыМодулей = ПутиФайловКонфигурации.ТипыМодулей();
КонецПроцедуры	